/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './expandable-list.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/change_detection/change_detection_util';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/query_list';
import * as import10 from '../node_modules/@angular/common/src/directives/ng_style.ngfactory';
import * as import11 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/common/src/directives/ng_style';
export class Wrapper_ExpandableListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_ExpandableListItemComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListItemComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListItemComponent();
    this._expr_0 = import2.UNINITIALIZED;
    this._expr_1 = import2.UNINITIALIZED;
    this._expr_2 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_1:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      view.renderer.setElementClass(el,'expandable-list-item',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.context.isDisabled;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      view.renderer.setElementAttribute(el,'disabled',((currVal_2 == null)? (null as any): currVal_2.toString()));
      this._expr_2 = currVal_2;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_ExpandableListStyler {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListStyler;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListStyler();
    this._expr_0 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_0:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      view.renderer.setElementClass(el,'expandable-list',currVal_0);
      this._expr_0 = currVal_0;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_ExpandableListDividerStyler {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListDividerStyler;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListDividerStyler();
    this._expr_0 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_0:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      view.renderer.setElementClass(el,'expandable-list-divider',currVal_0);
      this._expr_0 = currVal_0;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ExpandableListComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ExpandableListComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ExpandableListComponent>;
  _ExpandableListComponent_0_3:Wrapper_ExpandableListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListComponent_Host0,renderType_ExpandableListComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'expandable-list',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ExpandableListComponent0(this.viewUtils,this,0,this._el_0);
    this._ExpandableListComponent_0_3 = new Wrapper_ExpandableListComponent();
    this.compView_0.create(this._ExpandableListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ExpandableListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ExpandableListComponent) && (0 === requestNodeIndex))) { return this._ExpandableListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ExpandableListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const ExpandableListComponentNgFactory:import8.ComponentFactory<import0.ExpandableListComponent> = new import8.ComponentFactory<import0.ExpandableListComponent>('expandable-list',View_ExpandableListComponent_Host0,import0.ExpandableListComponent);
const styles_ExpandableListComponent:any[] = ['.expandable-list {  display: block;}.expandable-list .expandable-list-item {  display: block;  text-transform: capitalize;  color: #000;  background: #FFF;}.expandable-list [disabled].expandable-list-item {  background: #eeeeee;}.expandable-list .expandable-list-item + .expandable-list-item {  border-top: 1px solid #e0e0e0;}.expandable-list .expandable-list-item .expandable-list-item-title {  display: flex;  flex-flow: row wrap;  align-items: center;  box-sizing: border-box;  padding: 0 16px;  height: 52px;  font-size: 16px;  cursor: pointer;}.expandable-list [disabled].expandable-list-item .expandable-list-item-title {  cursor: default;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item--title,.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item--secondary {  flex: 1;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item--secondary {  margin-top: 3px;  max-height: 18px;  transition: max-height .2s cubic-bezier(0, 0, 0.2, 1),              opacity .2s cubic-bezier(0, 0, 0.2, 1);}.expandable-list .expandable-list-item .expandable-list-item-title.expanded .expandable-list-item--secondary {  opacity: 0;  max-height: 0;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item--title {  color: #000;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item--secondary,.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item__dropdown {  color: #757575;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item-title__title {  flex: auto;  display: flex;  flex-direction: column;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item__dropdown {  flex: 1;  text-align: end;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item__dropdown svg {  width: 18px;  vertical-align: middle;}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item__dropdown-chevron-line1,.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item__dropdown-chevron-line2 {  stroke: #444;  stroke-width: 12px;  transform-origin: 50px 50px;  transition: transform 300ms cubic-bezier(0.65, 0.05, 0.36, 1);}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item__dropdown-chevron-line1 {  transform: rotateZ(45deg);}.expandable-list .expandable-list-item .expandable-list-item-title.expanded .expandable-list-item__dropdown-chevron-line1 {  transform: rotateZ(-45deg);}.expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item__dropdown-chevron-line2 {  transform: rotateZ(-45deg);}.expandable-list .expandable-list-item .expandable-list-item-title.expanded .expandable-list-item__dropdown-chevron-line2 {  transform: rotateZ(45deg);}.expandable-list .expandable-list-item .expandable-list-item-content[hidden] {  display: none;}.expandable-list .expandable-list-item .expandable-list-item-overflow {  overflow: hidden;}.expandable-list .expandable-list-item .expandable-list-item-content {  margin-top: -9999em;  padding: 16px 0;  overflow: auto;  font-size: 16px;  opacity: 0;  pointer-events: none;  transition: opacity 0.15s ease-out,              margin-top 0.3s ease-out;}.expandable-list .expandable-list-item .expandable-list-item-content.expanded {  overflow: auto;  opacity: 1;  pointer-events: auto;  transition: opacity 0.3s ease-in,              margin-top 0.2s ease-in;}.expandable-list .expandable-list-item .expandable-list-item-content > [item] {  display: block;  padding: 0 16px;  line-height: 40px;  text-decoration: none;  color: #000;}.expandable-list .expandable-list-item .expandable-list-item-content > [item]:hover {  background: rgba(0,0,0,0.1);}.expandable-list .expandable-list-item .expandable-list-item-content .expandable-list-divider {  display: block;  margin: 12px 16px;  border-top: 1px solid #e0e0e0;}'];
var renderType_ExpandableListComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.None,styles_ExpandableListComponent,{});
export class View_ExpandableListComponent0 extends import1.AppView<import0.ExpandableListComponent> {
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListComponent0,renderType_ExpandableListComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.projectNodes(parentRenderNode,0);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
}
var renderType_ExpandableListItemComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ExpandableListItemComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ExpandableListItemComponent>;
  _ExpandableListItemComponent_0_3:Wrapper_ExpandableListItemComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListItemComponent_Host0,renderType_ExpandableListItemComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'expandable-list-item',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ExpandableListItemComponent0(this.viewUtils,this,0,this._el_0);
    this._ExpandableListItemComponent_0_3 = new Wrapper_ExpandableListItemComponent();
    this.compView_0.create(this._ExpandableListItemComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ExpandableListItemComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ExpandableListItemComponent) && (0 === requestNodeIndex))) { return this._ExpandableListItemComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ExpandableListItemComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._ExpandableListItemComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ExpandableListItemComponent_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {  }
  }
}
export const ExpandableListItemComponentNgFactory:import8.ComponentFactory<import0.ExpandableListItemComponent> = new import8.ComponentFactory<import0.ExpandableListItemComponent>('expandable-list-item',View_ExpandableListItemComponent_Host0,import0.ExpandableListItemComponent);
const styles_ExpandableListItemComponent:any[] = ([] as any[]);
var renderType_ExpandableListItemComponent:import4.RenderComponentType = import3.createRenderComponentType('',3,import5.ViewEncapsulation.None,styles_ExpandableListItemComponent,{});
export class View_ExpandableListItemComponent0 extends import1.AppView<import0.ExpandableListItemComponent> {
  _viewQuery_contentEl_0:import9.QueryList<any>;
  _el_0:any;
  _el_1:any;
  _el_2:any;
  _el_3:any;
  _el_4:any;
  _el_5:any;
  _el_6:any;
  _el_7:any;
  _el_8:any;
  _el_9:any;
  _el_10:any;
  _NgStyle_10_3:import10.Wrapper_NgStyle;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  _map_16:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListItemComponent0,renderType_ExpandableListItemComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_13 = import2.UNINITIALIZED;
    this._expr_14 = import2.UNINITIALIZED;
    this._expr_15 = import2.UNINITIALIZED;
    this._map_16 = import3.pureProxy1((p0:any):{[key: string]:any} => {
      return {'margin-top': p0};
    });
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_contentEl_0 = new import9.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','expandable-list-item-title'),(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','expandable-list-item-title__title'),(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray2(2,'class','expandable-list-item--title'),(null as any));
    this.projectNodes(this._el_2,0);
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray2(2,'class','expandable-list-item--secondary'),(null as any));
    this.projectNodes(this._el_3,1);
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','expandable-list-item__dropdown'),(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_4,':svg:svg',new import3.InlineArray8(6,'version','1.1','viewBox','0 -60 100 220','xmlns','http://www.w3.org/2000/svg'),(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_5,':svg:g',new import3.InlineArray2(2,'class','expandable-list-item__dropdown-chevron'),(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_6,':svg:line',new import3.InlineArray16(10,'class','expandable-list-item__dropdown-chevron-line1','x1','-10','x2','55','y1','50','y2','50'),(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_6,':svg:line',new import3.InlineArray16(10,'class','expandable-list-item__dropdown-chevron-line2','x1','110','x2','44','y1','50','y2','50'),(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','expandable-list-item-overflow'),(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_9,'div',new import3.InlineArray2(2,'class','expandable-list-item-content'),(null as any));
    this._NgStyle_10_3 = new import10.Wrapper_NgStyle(this.parentView.injectorGet(import11.KeyValueDiffers,this.parentIndex),new import12.ElementRef(this._el_10),this.renderer);
    this.projectNodes(this._el_10,2);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this._viewQuery_contentEl_0.reset([new import12.ElementRef(this._el_10)]);
    this.context.elementView = this._viewQuery_contentEl_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._el_5,
      this._el_6,
      this._el_7,
      this._el_8,
      this._el_9,
      this._el_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.NgStyle) && (10 === requestNodeIndex))) { return this._NgStyle_10_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_10_0_0:any = this._map_16(this.context.marginTop);
    this._NgStyle_10_3.check_ngStyle(currVal_10_0_0,throwOnChange,false);
    this._NgStyle_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_13:any = this.context.isExpanded;
    if (import3.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementClass(this._el_0,'expanded',currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.context.isExpanded;
    if (import3.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementClass(this._el_10,'expanded',currVal_14);
      this._expr_14 = currVal_14;
    }
    const currVal_15:boolean = !this.context.isExpanded;
    if (import3.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementAttribute(this._el_10,'aria-hidden',((currVal_15 == null)? (null as any): currVal_15.toString()));
      this._expr_15 = currVal_15;
    }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}