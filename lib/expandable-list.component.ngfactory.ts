/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './expandable-list.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/change_detection/change_detection_util';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
export class Wrapper_ExpandableListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_ExpandableListItemComponent {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListItemComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListItemComponent();
    this._expr_0 = import2.UNINITIALIZED;
    this._expr_1 = import2.UNINITIALIZED;
    this._expr_2 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_1:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      view.renderer.setElementClass(el,'expandable-list-item',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.context.isDisabled;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      view.renderer.setElementAttribute(el,'disabled',((currVal_2 == null)? (null as any): currVal_2.toString()));
      this._expr_2 = currVal_2;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_ExpandableListStyler {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListStyler;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListStyler();
    this._expr_0 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_0:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      view.renderer.setElementClass(el,'expandable-list',currVal_0);
      this._expr_0 = currVal_0;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_ExpandableListDividerStyler {
  /*private*/ _eventHandler:Function;
  context:import0.ExpandableListDividerStyler;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor() {
    this._changed = false;
    this.context = new import0.ExpandableListDividerStyler();
    this._expr_0 = import2.UNINITIALIZED;
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_0:any = true;
    if (import3.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      view.renderer.setElementClass(el,'expandable-list-divider',currVal_0);
      this._expr_0 = currVal_0;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ExpandableListComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ExpandableListComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ExpandableListComponent>;
  _ExpandableListComponent_0_3:Wrapper_ExpandableListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListComponent_Host0,renderType_ExpandableListComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'expandable-list',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ExpandableListComponent0(this.viewUtils,this,0,this._el_0);
    this._ExpandableListComponent_0_3 = new Wrapper_ExpandableListComponent();
    this.compView_0.create(this._ExpandableListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ExpandableListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ExpandableListComponent) && (0 === requestNodeIndex))) { return this._ExpandableListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ExpandableListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const ExpandableListComponentNgFactory:import8.ComponentFactory<import0.ExpandableListComponent> = new import8.ComponentFactory<import0.ExpandableListComponent>('expandable-list',View_ExpandableListComponent_Host0,import0.ExpandableListComponent);
const styles_ExpandableListComponent:any[] = ['\n    .expandable-list {\n      display: block;\n      box-shadow: 0 2px 2px rgba(0,0,0,.24),\n                  0 0   2px rgba(0,0,0,.12);\n    }\n    .expandable-list .expandable-list-item {\n      display: block;\n      text-transform: capitalize;\n      color: #000;\n      background: #FFF;\n    }\n    .expandable-list [disabled].expandable-list-item {\n      background: #eeeeee;\n    }\n    .expandable-list [disabled].expandable-list-item .expandable-list-item-title {\n      cursor: default;\n    }\n    .expandable-list .expandable-list-item + .expandable-list-item {\n      border-top: 1px solid #e0e0e0;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-title {\n      display: flex;\n      flex-flow: row wrap;\n      align-items: center;\n      box-sizing: border-box;\n      padding: 0 16px;\n      height: 48px;\n      font-size: 16px;\n      cursor: pointer;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item--secondary,\n    .expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item-dropdown {\n      color: #757575;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-title > span {\n      flex: 1;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item-dropdown {\n      text-align: end;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item-dropdown-chevon {\n      transform: rotateZ(90deg);\n      transition: transform 300ms cubic-bezier(0.22, 0.61, 0.36, 1);\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-title .expandable-list-item-dropdown-chevon.expanded {\n      transform: rotateZ(-90deg);\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-content[hidden] {\n      display: none;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-content {\n      font-size: 16px;\n      padding: 0;\n      max-height: 0;\n      overflow: hidden;\n      opacity: 0;\n      transition: max-height .3s cubic-bezier(0.22, 0.61, 0.36, 1),\n                  padding .5s cubic-bezier(0.22, 0.61, 0.36, 1),\n                  opacity .2s cubic-bezier(0.22, 0.61, 0.36, 1);\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-content.expanded {\n      padding: 16px 0;\n      max-height: 500px;\n      opacity: 1;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-content > [item] {\n      display: block;\n      padding: 0 16px;\n      line-height: 40px;\n      text-decoration: none;\n      color: #000;\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-content > [item]:hover {\n      background: rgba(0,0,0,0.1);\n    }\n    .expandable-list .expandable-list-item .expandable-list-item-content .expandable-list-divider {\n      display: block;\n      margin: 12px 16px;\n      border-top: 1px solid #e0e0e0;\n    }\n  '];
var renderType_ExpandableListComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.None,styles_ExpandableListComponent,{});
export class View_ExpandableListComponent0 extends import1.AppView<import0.ExpandableListComponent> {
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListComponent0,renderType_ExpandableListComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.projectNodes(parentRenderNode,0);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
}
var renderType_ExpandableListItemComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ExpandableListItemComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ExpandableListItemComponent>;
  _ExpandableListItemComponent_0_3:Wrapper_ExpandableListItemComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListItemComponent_Host0,renderType_ExpandableListItemComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'expandable-list-item',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ExpandableListItemComponent0(this.viewUtils,this,0,this._el_0);
    this._ExpandableListItemComponent_0_3 = new Wrapper_ExpandableListItemComponent();
    this.compView_0.create(this._ExpandableListItemComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ExpandableListItemComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ExpandableListItemComponent) && (0 === requestNodeIndex))) { return this._ExpandableListItemComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ExpandableListItemComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._ExpandableListItemComponent_0_3.context.ngAfterContentInit(); } }
    this._ExpandableListItemComponent_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {  }
  }
}
export const ExpandableListItemComponentNgFactory:import8.ComponentFactory<import0.ExpandableListItemComponent> = new import8.ComponentFactory<import0.ExpandableListItemComponent>('expandable-list-item',View_ExpandableListItemComponent_Host0,import0.ExpandableListItemComponent);
const styles_ExpandableListItemComponent:any[] = ([] as any[]);
var renderType_ExpandableListItemComponent:import4.RenderComponentType = import3.createRenderComponentType('',3,import5.ViewEncapsulation.None,styles_ExpandableListItemComponent,{});
export class View_ExpandableListItemComponent0 extends import1.AppView<import0.ExpandableListItemComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _text_19:any;
  _el_20:any;
  _text_21:any;
  _text_22:any;
  _text_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ExpandableListItemComponent0,renderType_ExpandableListItemComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_24 = import2.UNINITIALIZED;
    this._expr_25 = import2.UNINITIALIZED;
    this._expr_26 = import2.UNINITIALIZED;
    this._expr_27 = import2.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','expandable-list-item-title'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_4 = this.renderer.createText(this._el_3,'\n        ',(null as any));
    this.projectNodes(this._el_3,0);
    this._text_5 = this.renderer.createText(this._el_3,'\n      ',(null as any));
    this._text_6 = this.renderer.createText(this._el_1,'\n\n      ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray2(2,'class','expandable-list-item--secondary'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'\n        ',(null as any));
    this.projectNodes(this._el_7,1);
    this._text_9 = this.renderer.createText(this._el_7,'\n      ',(null as any));
    this._text_10 = this.renderer.createText(this._el_1,'\n\n      ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray2(2,'class','expandable-list-item-dropdown'),(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'\n        ',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_11,':svg:svg',new import3.InlineArray16(12,'class','expandable-list-item-dropdown-chevon','height','12px','viewBox','0 0 306 306','width','12px','x','0px','y','0px'),(null as any));
    this._text_14 = this.renderer.createText(this._el_13,'\n          ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_13,':svg:polygon',new import3.InlineArray4(4,'fill','#757575','points','94.35,0 58.65,35.7 175.95,153 58.65,270.3 94.35,306 247.35,153'),(null as any));
    this._text_16 = this.renderer.createText(this._el_13,'\n        ',(null as any));
    this._text_17 = this.renderer.createText(this._el_11,'\n      ',(null as any));
    this._text_18 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_19 = this.renderer.createText(parentRenderNode,'\n\n    ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','expandable-list-item-content'),(null as any));
    this._text_21 = this.renderer.createText(this._el_20,'\n      ',(null as any));
    this.projectNodes(this._el_20,2);
    this._text_22 = this.renderer.createText(this._el_20,'\n    ',(null as any));
    this._text_23 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._text_22,
      this._text_23
    ]
    ),[disposable_0]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_24:any = this.context.isExpanded;
    if (import3.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementClass(this._el_1,'expanded',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = this.context.isExpanded;
    if (import3.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setElementClass(this._el_13,'expanded',currVal_25);
      this._expr_25 = currVal_25;
    }
    const currVal_26:any = this.context.isExpanded;
    if (import3.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementClass(this._el_20,'expanded',currVal_26);
      this._expr_26 = currVal_26;
    }
    const currVal_27:any = this.context.disabled;
    if (import3.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementProperty(this._el_20,'hidden',currVal_27);
      this._expr_27 = currVal_27;
    }
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.onClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}